const merge = require('webpack-merge');
const BrotliPlugin = require('brotli-webpack-plugin');
const CompressionPlugin = require('compression-webpack-plugin');
const OfflinePlugin = require('offline-plugin');
const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer'); // eslint-disable-line
const common = require('./common');
const paths = require('../common/paths');

module.exports = merge(common, {
  entry: ['babel-polyfill', paths.web.entryPath],
  output: {
    path: paths.web.outputPath,
    filename: 'static/js/[name].[hash:8].js',
    chunkFilename: 'static/js/[name].chunk.js',
    publicPath: '/',
  },
  optimization: {
    splitChunks: {
      chunks: 'initial',
      automaticNameDelimiter: '-',
      minSize: 184320, // 180kb
      maxSize: 245760, // 240kb
      cacheGroups: {
        vendor: {
          test: /[\\/]node_modules[\\/]/,
          name: 'vendor',
        },
      },
    },
  },
  // Setup service worker and offline support
  plugins: [
    new OfflinePlugin({
      AppCache: false, // because it's deprecated
      appShell: '/news/articles/',
      autoUpdate: 1000 * 60 * 60 * 6, // 6 hours
      // externals means files not generated by webpack
      // an alternative would be html-webpack-plugin
      caches: 'all',
      externals: [
        'https://gel.files.bbci.co.uk/r2.302/BBCReithSans_W_Rg.woff2',
        'https://gel.files.bbci.co.uk/r2.302/BBCReithSans_W_Rg.woff',
        'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Md.woff2',
        'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Md.woff',

        /* Unused fonts
          - When adding fonts, be sure to add them to the globalStyles object here:
          https://github.com/BBC-News/simorgh/blob/latest/src/app/lib/globalStyles.js#L5
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSans_W_Lt.woff2',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSans_W_Lt.woff',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Lt.woff2',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Lt.woff',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Rg.woff2',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Rg.woff',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Bd.woff2',
          'https://gel.files.bbci.co.uk/r2.302/BBCReithSerif_W_Bd.woff',
        End of unused fonts */
      ],
      ServiceWorker: {
        events: true,
        minify: true,
      },
      updateStrategy: 'changed',
    }),
    new BrotliPlugin({
      asset: '[path].br[query]',
      test: /\.js$/,
      threshold: 10240,
      minRatio: 0.8,
    }),
    new CompressionPlugin({
      algorithm: 'gzip',
      filename: '[path].gz[query]',
      test: /\.js$/,
      threshold: 10240,
      minRatio: 0.8,
    }),
    new BundleAnalyzerPlugin({
      analyzerMode: 'static',
      defaultSizes: 'gzip',
      generateStatsFile: true,
      openAnalyzer: false,
      reportFilename: '../../reports/webpackBundleReport.html',
      statsFilename: '../../reports/webpackBundleReport.json',
    }),
  ],
  performance: {
    maxAssetSize: 245760, // 240kb - individual bundles
    maxEntrypointSize: 491520, // 480kb - total bundles
  },
});
