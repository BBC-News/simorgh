#!/usr/bin/env groovy
library 'Simorgh'

def channel = '#simorgh-alarms-jamesdonoh-test'

node {
    properties(
        [
            buildDiscarder(
                logRotator(
                    daysToKeepStr: '10',
                    artifactDaysToKeepStr: '10'
                )
            ),
            parameters(
                [
                    string(defaultValue: 'nicer-e2e-reports', name: 'BRANCH')
                ]
            )
        ]
    )
    timeout(time: 240, unit: 'MINUTES') {
        withEnv([
            'CI=true'
        ]) {
            cleanWs() // Clean the workspace

            docker.image(Simorgh.nodeDockerImage()).inside('--ipc host') {
                Simorgh.checkout("${params.BRANCH}", 'simorgh')
                Simorgh.installNodeModules()
                stage ('Localhost Tests') {
                    try {
                        sh script: "npm run build && CYPRESS_ONLY_SERVICE=persian npm run test:ci;"
                    } catch (Exception e) {
                        // catch (FlowInterruptedException interruptEx) {

                        def message = e.toString()
                        slackSend(channel: channel, color: 'danger', message: message)
                    } finally {
                        junit 'cypress/results/**/*.xml'

                        def message = "@here ${env.JOB_NAME} ${env.JOB} finally"
                        slackSend(channel: channel, color: 'warning', message: message)
                    }
                }
            }
        }
    }
}
