// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Styled GridWrapper items GridItemConstrainedLarge should start at column 1 & span 1 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:14.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:15rem) and (max-width:24.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@supports (display:grid) {
  .c2 {
    display: block;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
      dir="ltr"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            1/4 or 1/5 or 1/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLarge should start at column 1 & span 8 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:14.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:15rem) and (max-width:24.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@supports (display:grid) {
  .c2 {
    display: block;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 8;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
      dir="ltr"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            4/4 or 5/5 or 8/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLarge should start at column 1 & span columns depending on breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:14.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:15rem) and (max-width:24.9375rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@supports (display:grid) {
  .c2 {
    display: block;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 2;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 3;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
      dir="ltr"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            Spanning a various number of columns depending on breakpoint
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLargeNoMargin should pop out of grid at Group 5 breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      Group 5 pop out grid.
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLargeNoMargin should start at column 1 & span 1 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:63rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 12;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            1/4 or 1/5 or 1/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLargeNoMargin should start at column 1 & span 8 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:63rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 12;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 12;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            4/4 or 5/5 or 8/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedLargeNoMargin should start at column 1 & span columns depending on breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:63rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 12;
  }
}

@media (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 2;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 3;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(12,1fr);
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            Spanning a various number of columns depending on breakpoint
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMedium should start at column 1 & span 1 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            1/4 or 1/5 or 1/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMedium should start at column 1 & span 8 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 8;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            4/4 or 5/5 or 8/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMedium should start at column 1 & span columns depending on breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 3;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            Spanning a various number of columns depending on breakpoint
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMediumNoMargin should start at column 1 & span 1 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            1/4 or 1/5 or 1/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMediumNoMargin should start at column 1 & span 8 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 8;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            4/4 or 5/5 or 8/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedMediumNoMargin should start at column 1 & span columns depending on breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c2 {
  grid-column: 1 / span 6;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (min-width:37.5rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 37.75rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 10;
    max-width: 38.5rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 3;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:37.5rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(10,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            Spanning a various number of columns depending on breakpoint
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedSmall should start at column 1 & span 1 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (max-width:25rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 66.67%;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 30rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 8;
    max-width: 30.6rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (max-width:24.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (max-width:25rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(8,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            1/4 or 1/5 or 1/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedSmall should start at column 1 & span 8 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (max-width:25rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 66.67%;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 30rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 8;
    max-width: 30.6rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (max-width:24.9375rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 6;
  }
}

@media (max-width:25rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(8,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            4/4 or 5/5 or 8/8
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridItemConstrainedSmall should start at column 1 & span columns depending on breakpoint 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

.c3 {
  display: grid;
  grid-column-gap: 1rem;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

@media (max-width:25rem) {
  .c2 {
    padding: 0 0.5rem;
  }
}

@media (min-width:25rem) and (max-width:62.9375rem) {
  .c2 {
    padding: 0 1rem;
  }
}

@media (max-width:25rem) {
  .c2 {
    grid-column: 1 / span 6;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 66.67%;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c2 {
    grid-column: 1 / span 5;
    max-width: 83.33%;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c2 {
    grid-column: 1 / span 4;
    max-width: 30rem;
  }
}

@media (min-width:80rem) {
  .c2 {
    grid-column: 1 / span 8;
    max-width: 30.6rem;
  }
}

@supports (display:grid) {
  .c2 {
    max-width: initial;
  }
}

@media (max-width:24.9375rem) {
  .c4 {
    grid-column: 1 / span 1;
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c4 {
    grid-column: 1 / span 2;
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c4 {
    grid-column: 1 / span 3;
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c4 {
    grid-column: 1 / span 4;
  }
}

@media (min-width:80rem) {
  .c4 {
    grid-column: 1 / span 5;
  }
}

@media (max-width:25rem) {
  .c3 {
    grid-template-columns: repeat(6,1fr);
  }
}

@media (min-width:25rem) and (max-width:37.4375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:37.5rem) and (max-width:62.9375rem) {
  .c3 {
    grid-template-columns: repeat(5,1fr);
  }
}

@media (min-width:63rem) and (max-width:79.9375rem) {
  .c3 {
    grid-template-columns: repeat(4,1fr);
  }
}

@media (min-width:80rem) {
  .c3 {
    grid-template-columns: repeat(8,1fr);
  }
}

@supports (display:grid) {
  .c3 {
    max-width: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div
      class="c2"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div>
            Spanning a various number of columns depending on breakpoint
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Styled GridWrapper items GridWrapper should render correctly 1`] = `
.c0 {
  max-width: 46.4rem;
  margin: 0 auto;
}

@supports (display:grid) {
  .c1 {
    display: grid;
    position: initial;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
    dir="ltr"
  >
    <div>
      content
    </div>
  </div>
</div>
`;
