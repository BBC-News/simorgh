openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/no-name2/article/1.0.0
info:
  description: This is an early draft of an Article API definition for web and apps.
  version: "1.1.1"
  title: News web and apps article API
  contact:
    email: benjamin.hobbs@bbc.co.uk
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: news-developers
    description: Operations available to and wanted by news developers
paths:
  /article:
    get:
      tags:
      - news-developers
      summary: returns article/s
      operationId: getArticles
      description: |
        By passing in the appropriate parameters, you can return the appropriate article/s body from the system
      parameters:
        - in: query
          name: searchString
          description: pass the optional search string for looking up articles
          required: true
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/article'
        '400':
          description: bad input parameter/s
components:
  schemas:
    article:
      type: object
      required:
        - content
        - metadata
        - promo
      properties:
        content:
          type: object
          required:
            - model
          properties:
            model:
              type: object
              required:
                - blocks
              properties:
                blocks:
                  $ref: "#/components/schemas/blocks"
        metadata:
          required:
            - blockId
            - created
            - firstPublished
            - id
            - lastPublished
            - lastUpdated
            - locators
            - passport
            - tags
            - type
          properties:
            blockId:
              type: string
            blockTypes:
              type: object
              items:
                type: string
                # oneOf:  # one of has have a $ref value
                #   - "altText"
                #   - "caption"
                #   - "headline"
                #   - "image"
                #   - "paragraph"
                #   - "rawImage"
                #   - "rawVideo"
                #   - "subheading"
                #   - "text"
                #   - "video"
              minItems: 1
            created:
              type: number
            createdBy:
              type: string
            firstPublished:
              type: number
            id:
              type: string
            lastPublished:
              type: number
            lastUpdated:
              type: number
            locators:
              type: object
              required:
                - optimoUrn
              properties:
                optimoUrn:
                  type: string
            passport:
              type: object
              required:
                - articleType
                - home
                - language
              properties:
                articleType:
                  enum:
                    - askTheAudience
                    - explainer
                    - factCheck
                    - feature
                    - news
                    - opinion
                    - review
                    - summary
                  example: analysis
                  type: string
                genre:
                  type: string
                home:
                  example: "http://www.bbc.co.uk/ontologies/passport/home/News"
                  type: string
                language:
                  example: "en-gb"
                  type: string
            tags:
              type: object
              properties:
                about:
                  type: array
                  items:
                    type: string
                mentions:
                  type: array
                  items:
                    type: string
            type:
              enum:
                - article
              type: string
            version:
              type: string
        promo:
          type: object
          required:
            - headlines
            - id
            - locators
            - summary
            - timestamp
          properties:
            headlines:
              type: object
              required:
                - seoHeadline
                - promoHeadline
              properties:
                seoHeadline:
                  example: "UK pledges extra Â£44m for Channel border security"
                  type: string
                promoHeadline:
                  type: string
            id:
              type: string
            locators:
              type: object
              required:
                - optimoUrn
              properties:
                optimoUrn:
                  type: string
            summary:
              type: string
            timestamp:
              type: number

    # schema definitions for referred blocks below

    blocks:
      type: object
      items:
        oneOf:
          - $ref: "#/components/schemas/altText"
          - $ref: "#/components/schemas/caption"
          - $ref: "#/components/schemas/headline"
          - $ref: "#/components/schemas/image"
          - $ref: "#/components/schemas/modelWithText"
          - $ref: "#/components/schemas/paragraph"
          - $ref: "#/components/schemas/rawImage"
          - $ref: "#/components/schemas/rawVideo"
          - $ref: "#/components/schemas/text"
          - $ref: "#/components/schemas/video"
      minItems: 1

    altText:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - altText
          type: string

    caption:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - caption
          type: string

    headline:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - headline
          type: string

    image:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - image
          type: string

    modelWithText:
      type: object
      properties:
        text:
          example: "Aliquam quis sodales nisl."
          type: string

    paragraph:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - paragraph
          type: string

    rawImage:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            copyrightHolder:
              example: BBC
              type: string
            height:
              example: 420
              type: integer
            locator:
              example: "https://fishchips.co.uk/images/ic/640x360/p052ww1r.jpg"
              type: string
            originCode:
              example: true
              type: boolean
            width:
              example: 640
              type: integer
          required:
            - copyrightHolder
            - height
            - locator
            - originCode
            - width
          type: object
        type:
          enum:
            - rawImage
          type: string

    rawVideo:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            allowffsiteEmbedding:
              example: false
              type: string
            duration:
              example: PTSVHD02
              type: string
            guidance:
              example: true
              type: boolean
            isLive:
              example: false
              type: string
            locator:
              example: "xyz:abc:pips:pid:p019fch9"
              type: string
          required:
            - allowOffsiteEmbedding
            - duration
            - guidance
            - isLive
            - locator
          type: object
        type:
          enum:
            - rawVideo
          type: string

    text:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - text
          type: string

    video:
      type: object
      required:
        - blockId
        - model
        - type
      properties:
        blockId:
          example: 0f29a57f-3492-3c0d-af51-837208b657fb
          type: string
        model:
          properties:
            blocks:
              $ref: "#/components/schemas/blocks"
          type: object
        type:
          enum:
            - video
          type: string
